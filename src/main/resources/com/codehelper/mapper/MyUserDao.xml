<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.codehelper.mapper.MyUserDao">
    <!--auto generated Code-->
    <resultMap id="AllColumnMap" type="com.codehelper.domain.MyUser">
        <result id="id" property="id"/>
        <result column="cookie" property="cookie"/>
        <result column="type" property="type"/>
        <result column="user_name" property="userName"/>
        <result column="password" property="password"/>
        <result column="age" property="age"/>
        <result column="remaining_amount" property="remainingAmount"/>
        <result column="add_time" property="addTime"/>
        <result column="serial_id" property="serialId"/>
        <result column="global_id" property="globalId"/>
    </resultMap>

    <!--auto generated Code-->
    <sql id="all_column">
        `id`,
        `cookie`,
        `type`,
        `user_name`,
        `password`,
        `age`,
        `remaining_amount`,
        `add_time`,
        `serial_id`,
        `global_id`
    </sql>

    <!--auto generated Code-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="pojo.id">
        INSERT INTO my_user (
            `id`,
            `cookie`,
            `type`,
            `user_name`,
            `password`,
            `age`,
            `remaining_amount`,
            `add_time`,
            `serial_id`,
            `global_id`
        ) VALUES (
            #{pojo.id},
            #{pojo.cookie},
            #{pojo.type},
            #{pojo.userName},
            #{pojo.password},
            #{pojo.age},
            #{pojo.remainingAmount},
            #{pojo.addTime},
            #{pojo.serialId},
            #{pojo.globalId}
        )
    </insert>

    <!--auto generated Code-->
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="pojo.id">
        INSERT INTO my_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pojo.id!=null"> `id`,</if>
            <if test="pojo.cookie!=null"> `cookie`,</if>
            <if test="pojo.type!=null"> `type`,</if>
            <if test="pojo.userName!=null"> `user_name`,</if>
            <if test="pojo.password!=null"> `password`,</if>
            <if test="pojo.age!=null"> `age`,</if>
            <if test="pojo.remainingAmount!=null"> `remaining_amount`,</if>
            <if test="pojo.addTime!=null"> `add_time`,</if>
            <if test="pojo.serialId!=null"> `serial_id`,</if>
            <if test="pojo.globalId!=null"> `global_id`,</if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pojo.id!=null">#{pojo.id},</if>
            <if test="pojo.cookie!=null">#{pojo.cookie},</if>
            <if test="pojo.type!=null">#{pojo.type},</if>
            <if test="pojo.userName!=null">#{pojo.userName},</if>
            <if test="pojo.password!=null">#{pojo.password},</if>
            <if test="pojo.age!=null">#{pojo.age},</if>
            <if test="pojo.remainingAmount!=null">#{pojo.remainingAmount},</if>
            <if test="pojo.addTime!=null">#{pojo.addTime},</if>
            <if test="pojo.serialId!=null">#{pojo.serialId},</if>
            <if test="pojo.globalId!=null">#{pojo.globalId},</if>
        </trim>
    </insert>

    <!--auto generated Code-->
    <insert id="insertList">
        INSERT INTO my_user (
        <include refid="all_column"/>
        )VALUES
        <foreach collection="pojos" item="pojo" index="index" separator=",">
            (
            #{pojo.id}
                ,
            #{pojo.cookie}
                ,
            #{pojo.type}
                ,
            #{pojo.userName}
                ,
            #{pojo.password}
                ,
            #{pojo.age}
                ,
            #{pojo.remainingAmount}
                ,
            #{pojo.addTime}
                ,
            #{pojo.serialId}
                ,
            #{pojo.globalId}
                
            )
        </foreach>
    </insert>

    <!--auto generated Code-->
    <update id="update">
        UPDATE my_user
        <set>
            <if test="pojo.id != null"> `id` = #{pojo.id}, </if>
            <if test="pojo.cookie != null"> `cookie` = #{pojo.cookie}, </if>
            <if test="pojo.type != null"> `type` = #{pojo.type}, </if>
            <if test="pojo.userName != null"> `user_name` = #{pojo.userName}, </if>
            <if test="pojo.password != null"> `password` = #{pojo.password}, </if>
            <if test="pojo.age != null"> `age` = #{pojo.age}, </if>
            <if test="pojo.remainingAmount != null"> `remaining_amount` = #{pojo.remainingAmount}, </if>
            <if test="pojo.addTime != null"> `add_time` = #{pojo.addTime}, </if>
            <if test="pojo.serialId != null"> `serial_id` = #{pojo.serialId}, </if>
            <if test="pojo.globalId != null"> `global_id` = #{pojo.globalId} </if>
        </set>
        WHERE id = #{pojo.id}
    </update>

<!--auto generated by codehelper on 2017-03-01 15:43:28-->
    <delete id="delete">
        delete from my_user
    </delete>

<!--auto generated by codehelper on 2017-03-01 15:43:30-->
    <select id="find" resultMap="AllColumnMap">
        select
        <include refid="all_column"/>
        from my_user
    </select>

<!--auto generated by codehelper on 2017-03-01 15:43:54-->
    <select id="findById" resultMap="AllColumnMap">
        select
        <include refid="all_column"/>
        from my_user
        where `id`=#{id}
    </select>

<!--auto generated by codehelper on 2017-03-01 15:43:57-->
    <select id="findAgeById" resultType="java.lang.Integer">
        select `age`
        from my_user
        where `id`=#{id}
    </select>

<!--auto generated by codehelper on 2017-03-01 15:43:59-->
    <select id="findByUserName" resultMap="AllColumnMap">
        select
        <include refid="all_column"/>
        from my_user
        where `user_name`=#{userName}
    </select>

<!--auto generated by codehelper on 2017-03-01 15:44:01-->
    <select id="countByIdBetween" resultType="java.lang.Integer">
        select count(1)
        from my_user
        where `id`<![CDATA[>]]> #{minId} and `id` <![CDATA[<]]> #{maxId}
    </select>

<!--auto generated by codehelper on 2017-03-01 15:44:03-->
    <select id="findByIdGreaterThanOrEqualTo" resultMap="AllColumnMap">
        select
        <include refid="all_column"/>
        from my_user
        where `id`<![CDATA[>=]]> #{minId}
    </select>

<!--auto generated by codehelper on 2017-03-01 15:44:05-->
    <select id="findByIdLessThanOrEqualTo" resultMap="AllColumnMap">
        select
        <include refid="all_column"/>
        from my_user
        where `id`<![CDATA[<=]]> #{maxId}
    </select>

<!--auto generated by codehelper on 2017-03-01 15:44:06-->
    <select id="findByIdBetweenOrEqualTo" resultMap="AllColumnMap">
        select
        <include refid="all_column"/>
        from my_user
        where `id`<![CDATA[>=]]> #{minId} and `id` <![CDATA[<=]]> #{maxId}
    </select>

<!--auto generated by codehelper on 2017-03-01 15:44:10-->
    <select id="count" resultType="java.lang.Integer">
        select count(1)
        from my_user
    </select>

<!--auto generated by codehelper on 2017-03-01 15:44:12-->
    <select id="findDistinctUserName" resultType="java.lang.String">
        select distinct(`user_name`)
        from my_user
    </select>

<!--auto generated by codehelper on 2017-03-01 15:44:13-->
    <select id="findDistinctUserNameOrderByGlobalIdDesc" resultType="java.lang.String">
        select distinct(`user_name`)
        from my_user order by `global_id` desc
    </select>

<!--auto generated by codehelper on 2017-03-01 15:44:15-->
    <delete id="deleteById">
        delete from my_user
        where `id`=#{id}
    </delete>

<!--auto generated by codehelper on 2017-03-01 15:44:16-->
    <delete id="deleteByIdBetween">
        delete from my_user
        where `id`<![CDATA[>]]> #{minId} and `id` <![CDATA[<]]> #{maxId}
    </delete>

<!--auto generated by codehelper on 2017-03-01 15:44:18-->
    <select id="countDistinctUserNameByAgeLessThan" resultType="java.lang.Integer">
        select count(distinct(`user_name`))
        from my_user
        where `age`<![CDATA[<]]> #{maxAge}
    </select>

<!--auto generated by codehelper on 2017-03-01 15:44:19-->
    <select id="findFirstByUserName" resultMap="AllColumnMap">
        select
        <include refid="all_column"/>
        from my_user
        where `user_name`=#{userName} limit 1
    </select>

<!--auto generated by codehelper on 2017-03-01 15:44:21-->
    <select id="findUserNameAndPasswordByIdBetween" resultMap="AllColumnMap">
        select `user_name`, `password`
        from my_user
        where `id`<![CDATA[>]]> #{minId} and `id` <![CDATA[<]]> #{maxId}
    </select>

<!--auto generated by codehelper on 2017-03-01 15:44:23-->
    <select id="findByIdGreaterThan" resultMap="AllColumnMap">
        select
        <include refid="all_column"/>
        from my_user
        where `id`<![CDATA[>]]> #{minId}
    </select>

<!--auto generated by codehelper on 2017-03-01 15:44:26-->
    <select id="findByIdLessThan" resultMap="AllColumnMap">
        select
        <include refid="all_column"/>
        from my_user
        where `id`<![CDATA[<]]> #{maxId}
    </select>

<!--auto generated by codehelper on 2017-03-01 15:44:28-->
    <select id="findByIdBetween" resultMap="AllColumnMap">
        select
        <include refid="all_column"/>
        from my_user
        where `id`<![CDATA[>]]> #{minId} and `id` <![CDATA[<]]> #{maxId}
    </select>

<!--auto generated by codehelper on 2017-03-01 15:44:29-->
    <select id="findDistinctUserNameByIdIn" resultType="java.lang.String">
        select distinct(`user_name`)
        from my_user
        where `id` in
        <foreach item="item" index="index" collection="idList"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

<!--auto generated by codehelper on 2017-03-01 15:44:31-->
    <select id="findByAgeGreaterThanAndIdLessThan" resultMap="AllColumnMap">
        select
        <include refid="all_column"/>
        from my_user
        where `age`<![CDATA[>]]> #{minAge} and `id`<![CDATA[<]]> #{maxId}
    </select>

<!--auto generated by codehelper on 2017-03-01 15:44:33-->
    <select id="findByAgeOrderByUserNameDesc" resultMap="AllColumnMap">
        select
        <include refid="all_column"/>
        from my_user
        where `age`=#{age} order by `user_name` desc
    </select>

<!--auto generated by codehelper on 2017-03-01 15:44:38-->
    <select id="findByIdInAndUserNameIn" resultMap="AllColumnMap">
        select
        <include refid="all_column"/>
        from my_user
        where `id` in
        <foreach item="item" index="index" collection="idList"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
        and `user_name` in
        <foreach item="item" index="index" collection="userNameList"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

<!--auto generated by codehelper on 2017-03-01 15:44:39-->
    <update id="updateUserNameById">
        update my_user
        set `user_name`=#{updatedUserName}
        where `id`=#{id}
    </update>

<!--auto generated by codehelper on 2017-03-01 15:44:42-->
    <update id="updateUserNameAndPasswordByIdBetween">
        update my_user
        set `user_name`=#{updatedUserName}, `password`=#{updatedPassword}
        where `id`<![CDATA[>]]> #{minId} and `id` <![CDATA[<]]> #{maxId}
    </update>

<!--auto generated by codehelper on 2017-03-01 16:05:34-->
    <select id="findByIdBetweenOrEqualToAndIdLessThan" resultMap="AllColumnMap">
        select
        <include refid="all_column"/>
        from my_user
        where `id`<![CDATA[>=]]> #{minId} and `id` <![CDATA[<=]]> #{maxId} and `id`<![CDATA[<]]> #{maxId}
    </select>
</mapper>

